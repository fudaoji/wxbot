<?php

namespace app\admin\controller;
use app\common\model\zdjr\Clue;
use app\common\model\zdjr\Project;
use think\facade\Db;

class Zdjrclue extends Botbase
{
    /**
     * @var Clue
     */
    protected $model;
    /**
     * @var Project
     */
    private $projectM;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->model = new Clue();
        $this->projectM = new Project();
    }

    /**
     * 设置
     * @return mixed
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @author: fudaoji<fdj@kuryun.cn>
     */
    public function index(){
        if (request()->isPost()) {
            $post_data = input('post.');
            $where = ['clue.admin_id' => $this->adminInfo['id']];
            !empty($post_data['search_key']) && $where['content|title'] = ['like', '%' . $post_data['search_key'] . '%'];
            isset($post_data['step']) && $post_data['step'] != -1 && $where['step'] = $post_data['step'];
            !empty($post_data['project_id']) && $where['project_id'] = $post_data['project_id'];

            $params = [
                'alias' => 'clue',
                'join' => [
                    ['bot', 'bot.id=clue.bot_id', 'left'],
                    ['bot_member member', 'member.wxid=clue.wxid and member.uin=bot.uin', 'left'],
                ],
                'where' => $where,
                'refresh' => true
            ];
            $total = $this->model->totalJoin($params);
            if ($total) {
                $list = $this->model->getListJoin(array_merge($params, [
                    'field' => ['clue.*', 'member.headimgurl', 'member.nickname', 'member.username'],
                    'limit' => [$post_data['page'], $post_data['limit']],
                    'order' => ['clue.id' => 'desc']
                ]));
            } else {
                $list = [];
            }
            $this->success('success', '', ['total' => $total, 'list' => $list]);
        }

        $builder = new ListBuilder();
        $builder->addTopButton('addnew')
            ->setSearch([
                ['type' => 'text', 'name' => 'search_key', 'title' => '关键词', 'placeholder' => '名称|账号'],
                ['type' => 'select', 'name' => 'project_id', 'title' => '项目组', 'options' => [0 => '全部'] + $this->projectM->getProjects(['admin_id' => $this->adminInfo['id']])],
                ['type' => 'select', 'name' => 'step', 'title' => '进度', 'options' => [-1 => '全部'] + Clue::steps()]
            ])
            ->addTopButton('addnew', ['title' => '导入线索', 'href' => url('import')])
            ->addTableColumn(['title' => '所属项目', 'field' => 'project_id', 'minWidth' => 90,'type' => 'enum', 'options' => $this->projectM->getProjects()])
            ->addTableColumn(['title' => '名称', 'field' => 'title', 'minWidth' => 80])
            ->addTableColumn(['title' => '账号', 'field' => 'content', 'minWidth' => 80])
            ->addTableColumn(['title' => '头像', 'field' => 'headimgurl', 'type' => 'picture', 'minWidth' => 100])
            ->addTableColumn(['title' => '昵称', 'field' => 'nickname', 'minWidth' => 80])
            ->addTableColumn(['title' => '微信号', 'field' => 'username', 'minWidth' => 80])
            ->addTableColumn(['title' => '类型', 'field' => 'type', 'minWidth' => 80,'type' => 'enum','options' => Clue::types()])
            ->addTableColumn(['title' => '加友进度', 'field' => 'step', 'minWidth' => 80,'type' => 'enum','options' => Clue::steps()])
            ->addTableColumn(['title' => '录入时间', 'field' => 'create_time', 'minWidth' => 170,'type' => 'datetime'])
            ->addTableColumn(['title' => '状态', 'field' => 'status', 'minWidth' => 80,'type' => 'enum','options' => [0 => '禁用', 1=> '启用']])
            ->addTableColumn(['title' => '操作', 'minWidth' => 200, 'type' => 'toolbar'])
            ->addRightButton('edit')
            ->addRightButton('self',['title' => '禁用/启用', 'href' => url('forbidPost', ['id' => '__data_id__']), 'data-ajax' => 1, 'data-confirm' => 1])
            ->addRightButton('delete');
        return $builder->show();
    }

    /**
     * 编辑
     * @return mixed
     * @throws \think\Exception
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function edit(){
        $id = input('id', null);
        $data = $this->model->getOneByMap(['id' => $id, 'admin_id' => $this->adminInfo['id']], true, true);

        if (!$data) {
            $this->error('参数错误');
        }

        $builder = new FormBuilder();
        $builder->setPostUrl(url('savePost'))
            ->addFormItem('id', 'hidden', 'id', 'id')
            ->addFormItem('project_id', 'chosen', '选择项目', '选择项目', $this->projectM->getProjects(['admin_id' => $this->adminInfo['id']]))
            ->addFormItem('title', 'text', '名称', '50字内', [], 'required maxlength=50')
            ->addFormItem('content', 'text', '号码', '微信号｜QQ｜手机号｜Wxid', [], 'required maxlength=50')
            ->addFormItem('type', 'radio', '类型', '类型', Clue::types(), 'required')
            ->addFormItem('status', 'radio', '状态', '状态', [1 => '启用', 0 => '禁用'], 'required')
            ->setFormData($data);

        return $builder->show();
    }

    /**
     * 新增
     * @return mixed
     * @throws \think\Exception
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function add(){
        $builder = new FormBuilder();
        $data = [
            'status' => 1
        ];
        $builder->setPostUrl(url('savePost'))
            ->addFormItem('project_id', 'chosen', '选择项目', '选择项目', $this->projectM->getProjects(['admin_id' => $this->adminInfo['id']]))
            ->addFormItem('title', 'text', '名称', '50字内', [], 'required maxlength=50')
            ->addFormItem('content', 'text', '号码', '微信号｜QQ｜手机号｜Wxid', [], 'required maxlength=50')
            ->addFormItem('type', 'radio', '类型', '类型', Clue::types(), 'required')
            ->setFormData($data);

        return $builder->show();
    }

    /**
     * 禁用/启用
     * @throws \think\Exception
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function forbidPost()
    {
        $id = input('id', null);
        $data = $this->model->getOneByMap(['id' => $id, 'admin_id' => $this->adminInfo['id']], true, true);

        if (!$data) {
            $this->error('参数错误');
        }
        $this->model->updateOne([
            'id' => $id,
            'status' => abs($data['status'] - 1)
        ]);
        $this->success('操作成功');
    }

    /**
     * 批量导入
     * @return mixed
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function import(){
        if(request()->isPost()){
            if(! $list = cache('importclue' . $this->bot['id'])){
                $this->error('请重新上传文件');
            }

            $exist = $this->model->getField(["CONCAT(content,type) as content_type"], ['admin_id' => $this->adminInfo['id']], true);
            $insert = [];
            foreach ($list as $v){
                !in_array($v['content'].$v['type'], $exist) && $insert[] = [
                    'title' => $v['title'], 'content' => $v['content'],
                    'admin_id' => $this->adminInfo['id'], 'type' => $v['type'],
                    'create_time' => time(), 'project_id' => input('post.project_id')
                ];
            }
            cache('importclue' . $this->bot['id'], null);
            $this->model->insertAll($insert);
            $this->success('保存成功', '/undefined');
        }

        $import_options = [
            'fields' => ['title' => 'A' ,'content' => 'B', 'type' => 'C'],
            'start_row' => 2,
            'url' => url('importPost'),
            'template' => 'https://cdn.jingtuixuan.com/1-63175b227fb36.xlsx'
        ];
        $builder = new FormBuilder();
        $builder->setPostUrl(url('import'))
            ->addFormItem('project_id', 'chosen', '选择项目', '选择项目', $this->projectM->getProjects(['admin_id' => $this->adminInfo['id']]))
            ->addFormItem('file', 'import_file', '选择文件', '选择文件', $import_options, 'required');

        return $builder->show();
    }

    public function importPost(){
        $list = input('list');
        $key = 'importclue' . $this->bot['id'];
        if($all = cache($key)){
            $all = array_merge($all, $list);
        }else{
            $all = $list;
        }
        cache($key, $all, 300);
        $this->success('文件上传成功，请点击保存', '', $all);
    }

    public function savePost($jump_to = '/undefined', $data = [])
    {
        $data = input('post.');
        $where = ['admin_id' => $this->adminInfo['id'], 'content' => $data['content'], 'type' => $data['type']];
        if(!empty($data['id'])){
            $where['id'] = ['<>', $data['id']];
        }
        if($this->model->total($where)){
            $this->error('此线索已存在！');
        }
        parent::savePost($jump_to, $data); // TODO: Change the autogenerated stub
    }
}
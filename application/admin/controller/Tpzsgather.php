<?php

/**
 * Created by PhpStorm.
 * Script Name: Setting.php
 * Create: 2020/5/24 上午10:25
 * Description: 站点配置
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\admin\controller;

use app\admin\model\BotGroupmember;
use app\common\model\tpzs\Gather;
use app\constants\Bot;

class Tpzsgather extends Botbase
{
    /**
     * @var Gather
     */
    protected $model;
    /**
     * @var BotGroupmember
     */
    private $groupMemberM;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->model = new Gather();
        $this->groupMemberM = new BotGroupmember();
    }

    /**
     *
     * @return mixed
     * Author: fudaoji<fdj@kuryun.cn>
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function index()
    {
        if (request()->isPost()) {
            $post_data = input('post.');
            $where = ['g.admin_id' => $this->adminInfo['id'], 'g.bot_id' => $this->bot['id']];
            $params = [
                'alias' => 'g',
                'join' => [
                    ['bot_member m', 'm.id=g.group_id']
                ],
                'where' => $where,
                'refresh' => true
            ];
            $total = $this->model->totalJoin($params);
            if ($total) {
                $list = $this->model->getListJoin(array_merge($params, [
                    'limit' => [$post_data['page'], $post_data['limit']],
                    'field' => ['g.id','m.nickname as group_title', 'g.officer', 'm.id as group_id']
                ]));
                foreach ($list as $k => $v){
                    $group_members = $this->groupMemberM->getField(['nickname'], ['wxid' => ['in', $v['officer']], 'group_id' => $v['group_id']]);
                    $v['officer_names'] = implode(',', $group_members);
                    $list[$k] = $v;
                }
            }else{
                $list = [];
            }
            $this->success('success', '', ['total' => $total, 'list' => $list]);
        }
        $builder = new ListBuilder();
        $builder->addTopButton('addnew', ['title' => '添加采品群'])
            ->addTableColumn(['title' => '序号', 'field' => 'id', 'type' => 'index','minWidth' => 50])
            ->addTableColumn(['title' => '群聊', 'field' => 'group_title', 'width' => 120])
            ->addTableColumn(['title' => '指挥官', 'field' => 'officer_names', 'minWidth' => 200])
            ->addTableColumn(['title' => '操作', 'width' => 70, 'type' => 'toolbar'])
            ->addRightButton('edit');

        return $builder->show();
    }

    public function add(){
        $data = ['bot_id' => $this->bot['id']];
        $groups = model('botMember')->getField('id,nickname',['uin' => $this->bot['uin'], 'type' => Bot::GROUP], true);
        $members = model('botGroupmember')->getField('wxid,nickname',['group_id' => ['in', array_keys($groups)]], true);
        $builder = new FormBuilder();
        $builder->setTip("调度群：所有发单机器人集合群，选品人员把商品素材发到此群，那么群里的所有机器人会各自采集然后转发各自负责的群。")
            ->setPostUrl('savePost')
            ->addFormItem('bot_id', 'hidden', 'bot_id', 'bot_id')
            ->addFormItem('group_id', 'chosen', '选择调度群', '选择调度群', $groups)
            ->addFormItem('officer', 'chosen_multi', '指挥官', '该微信发表的消息才会被转发', $members, 'required')
            ->setFormData($data);
        return $builder->show();
    }

    public function edit(){
        $id = input('id', null);
        $data = $this->model->getOne($id);

        if (!$data) {
            $this->error('参数错误');
        }
        $data['officer'] = explode(',', $data['officer']);
        $groups = model('botMember')->getField('id,nickname',['uin' => $this->bot['uin'], 'type' => Bot::GROUP], true);
        $members = model('botGroupmember')->getField('wxid,nickname',['group_id' => ['in', array_keys($groups)]], true);
        $builder = new FormBuilder();
        $builder->setTip("调度群：所有发单机器人集合群，选品人员把商品素材发到此群，那么群里的所有机器人会各自采集然后转发各自负责的群。")
            ->setPostUrl('savePost')
            ->addFormItem('group_id', 'chosen', '选择调度群', '选择调度群', $groups, 'required')
            ->addFormItem('officer', 'chosen_multi', '指挥官', '该微信发表的消息才会被转发', $members, 'required')
            ->addFormItem('status', 'radio', '状态', '状态', [1=>'启用', 0 => '禁用'], 'required')
            ->setFormData($data);
        return $builder->show();
    }
}
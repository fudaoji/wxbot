<?php


namespace app\bot\controller;
use app\common\model\kefu\ChatLog;
use app\common\model\kefu\Kefu as KefuModel;
use app\common\model\kefu\Config;
use ky\Logger;
class Kefu extends Addon
{
    private $switch;
    private $toWxid = '';
    public function init($options = [])
    {
        parent::init($options); // TODO: Change the autogenerated stub
        $this->configM = new Config();
        $this->configs = $this->configM->getConf(['admin_id' => $this->bot['admin_id'],'bot_id' => 0]);//系统配置
        $this->switch = $this->configs['switch']??false;
        return $this;
    }


    /**
     * 私聊处理器
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function privateChatHandle(){
        Logger::write("私聊处理器---");
        if(empty($this->switch)){
            return false;
        }
        $this->toWxid = $this->fromWxid;
        //保存私聊消息
        $model_chat_log = new ChatLog();
        $model_chat_log->saveChat($this->content,$this->bot);
    }

    /**
     * 
     * 好友请求处理器
     */
    public function friendVerifyHandle(){
        Logger::write("好友请求处理器---");
        if(empty($this->switch)){
            return false;
        }
        //自动通过好友验证
        $model_kefu = new KefuModel();
        $botConfigs = $this->configM->getConf(['admin_id' => $this->bot['admin_id'],'bot_id' => $this->bot['id']]);//机器人配置
        $model_kefu->autoPass($this->content,$this->bot,$this->botClient,$botConfigs);
    }

    /**
     * 
     * 回调处理器
     */
    public function deviceCallbackHandle(){
        Logger::write("回调处理器---");
        if(empty($this->switch)){
            return false;
        }

        //保存手机发送消息
        $model_chat_log = new ChatLog();
        $model_chat_log->saveMobileMsg($this->content,$this->bot);

    }

    
    
}

<?php
/**
 * Created by PhpStorm.
 * Script Name: Botbase.php
 * Create: 2021/12/21 12:37
 * Description:
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\admin\controller;


use app\constants\Bot;

class Botbase extends Bbase
{
    protected $needBotId = false;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        if(empty($this->bot)){
            $this->error('请选择机器人操作', url('bot/index'));
        }
    }

    public function getGroups($where = []){
        $where = array_merge(['uin' => $this->bot['uin'], 'type' => Bot::GROUP], $where);
        return model('admin/botMember')->getField('wxid,nickname', $where, true);
    }

    public function getMembers($where = []){
        $where = array_merge(['uin' => $this->bot['uin']], $where);
        return model('admin/botMember')->getField('wxid,nickname', $where, true);
    }

    /**
     * 设置一条或者多条数据的状态
     * @Author  fudaoji<fdj@kuryun.cn>
     */
    public function setStatus() {
        $ids = input('ids/a');
        $status = input('status');

        if (empty($ids)) {
            $this->error('请选择要操作的数据');
        }

        $ids = (array) $ids;
        if($status == 'delete'){
            $map = ['id' => ['in', $ids]];
            $this->needBotId && $map['bot_id'] = $this->bot['id'];
            if($this->model->delByMap($map)){
                $this->success('删除成功');
            }else{
                $this->error('删除失败');
            }
        }else{
            $arr = [];
            $msg = [
                'success' => '操作成功！',
                'error'   => '操作失败！',
            ];
            switch ($status) {
                case 'forbid' :  // 禁用条目
                    $data['status'] = 0;
                    break;
                case 'resume' :  // 启用条目
                    $data['status'] = 1;
                    break;
                default:
                    $this->error('参数错误');
                    break;
            }

            foreach($ids as $id){
                $data[$this->pk] = $id;
                $this->needAid && $data['admin_id'] = $this->adminInfo['id'];
                $arr[] = $data;
            }
            if($this->model->saveAll($arr)){
                $this->success($msg['success']);
            }else{
                $this->error($msg['error']);
            }
        }
    }


    public function savePost($jump_to = '/undefined', $data = [])
    {
        empty($data) && $data = input('post.');
        $this->needBotId && $data['bot_id'] = $this->bot['id'];
        parent::savePost($jump_to, $data);
    }
}
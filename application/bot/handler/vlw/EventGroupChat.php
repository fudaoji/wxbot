<?php
/**
 * Created by PhpStorm.
 * Script Name: EventGroupChat.php
 * Create: 3/19/22 11:39 PM
 * Description:
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\bot\handler\vlw;


use app\admin\model\BotMember;
use app\bot\controller\Api;
use ky\Bot\Vlw;
use ky\Helper;
use ky\Logger;

class EventGroupChat extends Api
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->memberM = new BotMember();
    }

    /**
     * 群聊消息接收器
     */
    public function handle(){
        $this->groupWxid = $this->content['from_group'];
        $this->msgTransfer();
        $this->rmGroupMember();
    }

    /**
     *  机器人消息转发
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function msgTransfer(){
        $content = Helper::$ajax['content'];
        //Logger::error($content);
        $group_wxid = $this->groupWxid;

        //1、判断当前群组是否是某个用户的中央调度群
        if($group = $this->memberM->getOneJoin([
            'alias' => 'm',
            'join' => [
                ['botConfig c', 'c.value=m.id']
            ],
            'where' => ['m.wxid' => $group_wxid, 'c.key' => 'central_group', 'm.uin' => $this->botWxid],
            'field' => ['c.admin_id', 'm.wxid']
        ])){
            $officer = model('admin/botConfig')->getOneByMap([
                'admin_id' => $group['admin_id'],
                'key' => 'officer'
            ], ['value'], true);
            //未设置指挥官或当前发信人不是指挥官则退出
            if(empty($officer) || strpos($officer['value'], $this->fromWxid)===false ){
                return;
            }

            //2.取出机器人负责的群并转发
            $team = model('admin/botTeam')->getOneByMap([
                'admin_id' => $group['admin_id'],
                'bot_id' => $this->bot['id']
            ], ['groups']);

            if($team){
                $groups = explode(',', $team['groups']);
                switch($content['type']){
                    case Vlw::MSG_IMG:
                        $path = str_replace(['[pic=', ']'], '', $content['msg']);
                        $this->botClient->sendImgToFriends(['robot_wxid' => $content['robot_wxid'], 'to_wxid' => $groups, 'path' => $path]);
                        break;
                    default:
                        $this->botClient->sendTextToFriends(['robot_wxid' => $content['robot_wxid'], 'to_wxid' => $groups, 'msg' => $content['msg']]);
                        break;
                }
            }
        }
    }

    /**
     * 移出群
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function rmGroupMember(){
        if($this->groupWxid == 'R:10951134140940878'){
            if(($pos1 = strpos($this->content['msg'], "@") !== false) && ($pos2 = strpos($this->content['msg'], "[")) !== false){
                $nickname = trim(substr($this->content['msg'], $pos1, $pos2-1));
                if(!empty($nickname) && $gm = $this->getGroupMemberByNickname($nickname)){
                    Logger::error($gm);
                    /*
                     * todo
                     * 1.根据昵称找到wxid
                     * 2.过滤白名单
                     * 3.判断是否达到群规设置的次数
                     * */
                    if(3){
                        $this->botClient->sendTextToFriends(
                            [
                                'robot_wxid' => $this->botWxid,
                                'to_wxid' => $this->groupWxid,
                                'msg' => "@".$nickname."你已经被[弱]3次，现将你移出群。"
                            ]
                        );
                        //踢出
                        if(! $res = $this->botClient->removeGroupMember(
                            [
                                'robot_wxid' => $this->botWxid,
                                'to_wxid' => $gm['wxid'],
                                'group_wxid' => $this->groupWxid
                            ]
                        )){
                            Logger::error($this->botClient->getError());
                        }
                    }else{
                        $this->botClient->sendTextToFriends(
                            [
                                'robot_wxid' => $this->botWxid,
                                'to_wxid' => $this->groupWxid,
                                'msg' => "@".$nickname."你已经被[弱]2次，当达到3次的时候会被移出群。若被误伤，请私聊管理员！！！"
                            ]
                        );
                    }
                }
            }
            //Logger::error(json_encode($this->content, JSON_UNESCAPED_UNICODE));
        }
    }

}
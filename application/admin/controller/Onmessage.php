<?php
/**
 * Created by PhpStorm.
 * Script Name: Onmessage.php
 * Create: 12/25/21 9:43 PM
 * Description:
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\admin\controller;


use app\admin\model\Bot;
use app\admin\model\BotMember;
use app\common\controller\BaseCtl;
use ky\Bot\Wx;
use ky\Helper;
use ky\Logger;

class Onmessage extends BaseCtl
{

    /**
     * @var Bot
     */
    private $botM;
    /**
     * @var BotMember
     */
    private $memberM;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->botM = new Bot();
        $this->memberM = new BotMember();
    }

    /**
     * 机器人消息回调
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function botCallback(){
        if(request()->isPost()){
            Helper::$ajax = $this->getAjax();
            $bot_client = new Wx(['appKey' => Helper::$ajax['appkey']]);
            $bot = $this->getBot();
            $res = $bot_client->sendTextToFriend([
                'uuid' => $bot['uuid'],
                'data' => [
                    'to' => Helper::$ajax['from'],
                    "content" => Helper::$ajax['content'],
                    "type" => \app\constants\Bot::MSGTYPE_TEXT
                ] //{to: "", content:"", type:"text"}
            ]);
            if(empty($res['code'])) {
                Logger::error("消息回复错误：" . $res['msg']);
            }
            Logger::error(json_encode(Helper::$ajax, JSON_UNESCAPED_UNICODE));
        }
    }

    /**
     * @return array|false|\PDOStatement|string|\think\Model
     * @throws \think\exception\DbException
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function getBot(){
        return $this->botM->getOneByMap(['app_key' => Helper::$ajax['appkey']], ['uuid']);
    }

    /**
     * @return array|false|\PDOStatement|string|\think\Model
     * @throws \think\exception\DbException
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function getMember(){
        return $this->memberM->getOneByMap(['username' => Helper::$ajax['from']]);
    }
}
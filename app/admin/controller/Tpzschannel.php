<?php

namespace app\admin\controller;

use app\common\model\tpzs\Channel;
use app\common\model\tpzs\Grouppos;

class Tpzschannel extends Botbase
{
    /**
     * @var Grouppos
     */
    private $groupPosM;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->model = new Channel();
        $this->groupPosM = new Grouppos();
    }

    public function index()
    {
        if (request()->isPost()) {
            $post_data = input('post.');
            $where = ['admin_id' => $this->adminInfo['id']];
            !empty($post_data['search_key']) && $where['title|contact_name|contact_tel'] = ['like', '%' . $post_data['search_key'] . '%'];
            if (isset($post_data['status']) && $post_data['status'] != '')  $where['status'] = $post_data['status'];
            $total = $this->model->total($where, true);
            if ($total) {
                $list = $this->model->getList(
                    [$post_data['page'], $post_data['limit']],
                    $where, [], true, true
                );
            } else {
                $list = [];
            }
            $this->success('success', '', ['total' => $total, 'list' => $list]);
        }
        $builder = new ListBuilder();
        $builder->setSearch([
            ['type' => 'text', 'name' => 'search_key', 'title' => '关键词搜索', 'placeholder' => '机构名称、联系人、联系电话'],
            ['type' => 'select', 'name' => 'status', 'title' => '状态', 'options' => ['' => '全部', 1 => '启用', 0 => '禁用']]
        ])
            ->addTopButton('addnew')
            ->addTableColumn(['title' => 'ID', 'field' => 'id', 'minWidth' => 50])
            ->addTableColumn(['title' => '机构名称', 'field' => 'title', 'minWidth' => 70])
            ->addTableColumn(['title' => '联系人', 'field' => 'contact_name', 'minWidth' => 80])
            ->addTableColumn(['title' => '联系电话', 'field' => 'contact_tel', 'minWidth' => 100])
            ->addTableColumn(['title' => '每日里id', 'field' => 'ckid', 'minWidth' => 60])
            ->addTableColumn(['title' => '状态', 'field' => 'status', 'type' => 'enum', 'options' => [1 => '启用', 0 => '禁用'], 'minWidth' => 60])
            ->addTableColumn(['title' => '创建时间', 'field' => 'create_time', 'type' => 'datetime', 'minWidth' => 180])
            ->addTableColumn(['title' => '操作', 'minWidth' => 80, 'type' => 'toolbar'])
            ->addRightButton('edit')
            ->addRightButton('edit', ['title' => '关联群', 'href' => url('bindGroup', ['channel_id' => '__data_id__']), 'class' => 'layui-btn layui-btn-xs']);

        return $builder->show();
    }

    public function add()
    {
        $builder = new FormBuilder();
        $builder->setMetaTitle('新增')  //设置页面标题
            ->setPostUrl(url('savepost')) //设置表单提交地址
            ->addFormItem('title', 'text', '机构名称', '机构名称', [], 'required minlength=2')
            ->addFormItem('contact_name', 'text', '联系人', '联系人', [], 'required minlength=2 maxlength=20')
            ->addFormItem('contact_tel', 'text', '联系电话', '联系电话', [], 'required minlength=9 maxlength=20')
            ->addFormItem('ckid', 'text', '每日里id', '每日里id');
        return $builder->show();
    }

    public function edit()
    {
        $id = input('id');
        $data = $this->model->getOne($id);
        if (!$data) {
            $this->error('id参数错误');
        }
        //使用FormBuilder快速建立表单页面。
        $builder = new FormBuilder();
        $builder->setMetaTitle('编辑')  //设置页面标题
            ->setPostUrl(url('savepost')) //设置表单提交地址
            ->addFormItem('id', 'hidden', 'id', 'id')
            ->addFormItem('title', 'text', '机构名称', '机构名称', [], 'required minlength=2')
            ->addFormItem('contact_name', 'text', '联系人', '联系人', [], 'required minlength=2 maxlength=20')
            ->addFormItem('contact_tel', 'text', '联系电话', '联系电话', [], 'required minlength=9 maxlength=20')
            ->addFormItem('ckid', 'text', '每日里id', '每日里id')
            ->addFormItem('status', 'radio', '状态', '状态', [1 => '启用', 0 => '禁用'], 'required')
            ->setFormData($data);

        return $builder->show();
    }

    /**
     * 绑定群
     * @return mixed
     * Author: fudaoji<fdj@kuryun.cn>
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\Exception
     */
    public function bindGroup(){
        if(request()->isPost()){
            $post_data = input('post.');
            $groups = explode(',', $post_data['groups']);
            foreach ($groups as $group_id){
                if($res = $this->groupPosM->getOneByMap(['group_id' => $group_id], ['id'])){
                    $this->groupPosM->updateOne(['channel_id' => $post_data['channel_id'], 'id' => $res['id']]);
                }else{
                    $this->groupPosM->addOne(['channel_id' => $post_data['channel_id'], 'group_id' => $group_id]);
                }
            }
            $this->groupPosM->updateByMap(['channel_id' => $post_data['channel_id'], 'group_id' => ['notin', $groups]], ['channel_id' => 0]);
            $this->success('操作成功', '/undefined');
        }
        $id = input('channel_id', 0);
        $data = $this->model->getOne($id);
        $data['channel_id'] = $id;
        if($gp = $this->groupPosM->getField(['group_id'], ['channel_id' => $id])){
            $data['groups'] = $gp;
        }else{
            $data['groups'] = [];
        }
        $groups = model('admin/botMember')->getField('id,nickname',['uin' => $this->bot['uin'], 'type' => \app\constants\Bot::GROUP], true);
        //使用FormBuilder快速建立表单页面。
        $builder = new FormBuilder();
        $builder->setMetaTitle('关联群')  //设置页面标题
            ->setPostUrl(url('bindGroup')) //设置表单提交地址
            ->addFormItem('channel_id', 'hidden', 'channel id', 'channel id')
            ->addFormItem('title', 'static', '渠道', $data['title'])
            ->addFormItem('groups', 'chosen_multi', '选择群聊', '群聊', $groups, 'required')
            ->setFormData($data);

        return $builder->show();
    }
}

<?php
/**
 * Created by PhpStorm.
 * Script Name: EventPrivateChat.php
 * Create: 3/19/22 11:14 PM
 * Description:
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\bot\handler\vlw;


use app\bot\controller\Api;
use app\constants\Reply;
use ky\Helper;
use ky\Logger;

class EventPrivateChat extends Api
{
    private $friend;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        //return $this;
    }

    /**
     * 私聊消息接收器
     */
    public function handle(){
        $this->friend = $this->memberM->getOneByMap(['uin' => $this->bot['uin'], 'wxid' => $this->fromWxid]);
        $this->beAdded();

        $fdj = "wxid_xokb2ezu1p6t21";
        $qy_fdj = "1688854317341474";
        $qy_yxg = '1688856404324777';
        $qy_group = 'R:10951134140940878';
        $yyp = 'weiwei562608';
        $jane = "wxid_a98qqf9m4bny22";

        Logger::error($this->botWxid."privateChat".json_encode($this->content, JSON_UNESCAPED_UNICODE));
        if($this->fromWxid == $qy_yxg && $this->content['msg'] == "ping"){
            /*$res = $this->botClient->sendImgToFriend([
                'robot_wxid' => $this->botWxid,
                'to_wxid' => $this->botWxid,
                'path' => "https://devhhb.images.huihuiba.net/1-623bf9bb5f6ec.jpg"
            ]);*/
            $res = $this->botClient->sendTextToFriends([
                'robot_wxid' => $this->botWxid,
                'to_wxid' => $qy_yxg,
                'msg' => 'pong'
            ]);
            Logger::error(json_encode($res, JSON_UNESCAPED_UNICODE));
        }
    }

    /**
     * 被添加好友
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function beAdded(){
        if(empty($this->friend)){
            $this->friend = $this->memberM->addFriend([
                'bot' => $this->bot,
                'nickname' => filter_emoji($this->content['from_name']),
                'wxid' => $this->content['from_wxid']
            ]);

            //回复消息
            $reply = model('reply')->getOneByMap(['bot_id' => $this->bot['id'], 'event' => Reply::BEADDED]);
            if($reply && $reply['status']){
                model('reply')->botReply($this->bot, $this->botClient, $reply, $this->fromWxid);
            }
        }
    }

    /**
     * 被动回复
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function reply(){

    }
}
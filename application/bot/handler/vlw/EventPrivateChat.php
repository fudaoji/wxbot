<?php
/**
 * Created by PhpStorm.
 * Script Name: EventPrivateChat.php
 * Create: 3/19/22 11:14 PM
 * Description:
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\bot\handler\vlw;


use app\bot\controller\Api;
use app\constants\Reply;
use ky\Bot\Vlw;
use ky\Helper;
use ky\Logger;

class EventPrivateChat extends Api
{
    private $friend;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 私聊消息接收器
     */
    public function handle(){
        $this->friend = $this->memberM->getOneByMap(['uin' => $this->bot['uin'], 'wxid' => $this->fromWxid]);
        $this->basic();
        $this->addon();
    }

    /**
     * 基本处理
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function basic(){
        $this->beAdded();
        switch ($this->content['type']){
            case Vlw::MSG_TEXT:
                $this->keyword();
                break;
        }
    }

    /**
     * 插件处理
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function addon(){
        controller('bot/tpzs')->privateChatHandle(); //推品助手，后期这部分应是动态获取
    }

    /**
     * 被添加好友
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function beAdded(){
        if(empty($this->friend)){
            $this->friend = $this->memberM->addFriend([
                'bot' => $this->bot,
                'nickname' => filter_emoji($this->content['from_name']),
                'wxid' => $this->content['from_wxid']
            ]);

            //回复消息
            $reply = model('reply')->getOneByMap(['bot_id' => $this->bot['id'], 'event' => Reply::BEADDED]);
            if(!empty($reply['status']) && (empty($reply['wxids']) || strpos($reply['wxids'], $this->fromWxid) !== false) ){
                model('reply')->botReply($this->bot, $this->botClient, $reply, $this->fromWxid);
            }
        }
    }

    /**
     * 关键词回复
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function keyword(){
        $keyword = model('keyword')->getOneByMap([
            'bot_id' => $this->bot['id'],
            'keyword' => $this->content['msg'],
        ]);

        if(!empty($keyword['status']) && (empty($keyword['wxids']) || strpos($keyword['wxids'], $this->fromWxid) !== false )){
            model('reply')->botReply($this->bot, $this->botClient, $keyword, $this->fromWxid);
        }
    }
}
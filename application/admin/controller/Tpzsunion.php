<?php

namespace app\admin\controller;

use app\common\model\tpzs\Union;
use YearDley\EasyTBK\Factory;
use think\Db;

class Tpzsunion extends Base
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->model = new Union();
    }

    public function index()
    {
        if (request()->isPost()) {
            $post_data = input('post.');
            $where = ['admin_id' => $this->adminInfo['id']];
            !empty($post_data['search_key']) && $where['title|unionid'] = ['like', '%' . $post_data['search_key'] . '%'];
            if (isset($post_data['status']) && $post_data['status'] != '')  $where['status'] = $post_data['status'];
            $total = $this->model->total($where, true);
            if ($total) {
                $list = $this->model->getList(
                    [$post_data['page'], $post_data['limit']],
                    $where, [], true, true
                );
            } else {
                $list = [];
            }
            $this->success('success', '', ['total' => $total, 'list' => $list]);
        }
        $builder = new ListBuilder();
        $builder->setSearch([
            ['type' => 'text', 'name' => 'search_key', 'title' => '关键词搜索', 'placeholder' => '名称或联盟ID'],
            ['type' => 'select', 'name' => 'status', 'title' => '状态', 'options' => ['' => '全部', 1 => '启用', 0 => '禁用']]
        ])
            ->addTopButton('addnew', ['title' => '添加京东联盟', 'href' => url('addJd')])
            ->addTableColumn(['title' => '序号', 'field' => 'id', 'type' => 'index','minWidth' => 50])
            ->addTableColumn(['title' => '平台', 'field' => 'type', 'type' => 'enum', 'options' => Union::types(), 'minWidth' => 70])
            ->addTableColumn(['title' => '名称', 'field' => 'title', 'minWidth' => 70])
            ->addTableColumn(['title' => '联盟ID', 'field' => 'unionid', 'minWidth' => 80])
            ->addTableColumn(['title' => '授权key', 'field' => 'app_key', 'minWidth' => 200])
            ->addTableColumn(['title' => '默认', 'field' => 'default', 'type' => 'enum', 'options' => [1 => '是', 0 => '否'], 'minWidth' => 60])
            ->addTableColumn(['title' => '状态', 'field' => 'status', 'type' => 'enum', 'options' => [1 => '启用', 0 => '禁用'], 'minWidth' => 60])
            ->addTableColumn(['title' => '创建时间', 'field' => 'create_time', 'type' => 'datetime', 'minWidth' => 180])
            ->addTableColumn(['title' => '操作', 'minWidth' => 80, 'type' => 'toolbar'])
            ->addRightButton('edit', ['href' => url('editJd')])
            ->addRightButton('self', ['title' => '推广位', 'href' => url('tpzspos/index', ['union_id' => '__data_id__'])]);

        return $builder->show();
    }

    public function addJd()
    {
        $data['admin_id'] = $this->adminInfo['id'];
        $data['default'] = 0;
        $builder = new FormBuilder();
        $builder->setMetaTitle('新增京东联盟')  //设置页面标题
            ->setPostUrl(url('savepost')) //设置表单提交地址
            ->addFormItem('admin_id', 'hidden', 'created_by')
            ->addFormItem('title', 'text', '名称', '名称', [], 'required')
            ->addFormItem('unionid', 'text', '联盟ID', '联盟ID', [], 'required')
            ->addFormItem('app_key', 'textarea', '授权key', '授权key', [], 'required')
            ->addFormItem('default', 'radio', '是否默认', '是否默认', [1 => '是', 0 => '否'], 'required')
            ->setFormData($data);
        return $builder->show();
    }

    public function editJd()
    {
        $id = input('id');
        $data = $this->model->getOne($id);
        if (!$data) {
            $this->error('id参数错误');
        }
        //使用FormBuilder快速建立表单页面。
        $builder = new FormBuilder();
        $builder->setMetaTitle('编辑京东联盟')  //设置页面标题
            ->setPostUrl(url('savepost')) //设置表单提交地址
            ->addFormItem('id', 'hidden', 'id', 'id')
            ->addFormItem('title', 'text', '名称', '名称', [], 'required')
            ->addFormItem('unionid', 'text', '联盟ID', '联盟ID', [], 'required')
            ->addFormItem('app_key', 'textarea', '授权key', '授权key', [], 'required')
            ->addFormItem('default', 'radio', '是否默认', '是否默认', [1 => '是', 0 => '否'], 'required')
            ->addFormItem('status', 'radio', '状态', '状态', [1 => '启用', 0 => '禁用'], 'required')
            ->setFormData($data);

        return $builder->show();
    }

    /**
     * 推广位
     * @return mixed
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function position()
    {

        if (request()->isPost()) {
            $post_data = input('post.');
            $where = ['created_by' => $this->adminInfo['id'], 'status' => 1];
            !empty($post_data['search_key']) && $where['name|position_id'] = ['like', '%' . $post_data['search_key'] . '%'];
            if (isset($post_data['status']) && $post_data['status'] != '')  $where['status'] = $post_data['status'];
            $total = model('LeaguePosition')->total($where, true);
            if ($total) {
                $list = model('LeaguePosition')->getList(
                    [$post_data['page'], $post_data['limit']],
                    $where,
                    [],
                    true,
                    true
                );
            } else {
                $list = [];
            }
            $this->success('success', '', ['total' => $total, 'list' => $list]);
        }
        $builder = new ListBuilder();
        $builder->setSearch([
            ['type' => 'text', 'name' => 'search_key', 'title' => '关键词搜索', 'placeholder' => '名称或推广位ID'],
            ['type' => 'select', 'name' => 'status', 'title' => '状态', 'options' => ['' => '全部', 1 => '启用', 0 => '禁用']]
        ])
            ->addTopButton('addnew', ['title' => '添加推广位', 'href' => url('addPosition'), 'class' => 'layui-btn layui-btn-xs layui-btn-normal'])
            ->addTopButton('self', ['title' => '同步推广位', 'href' => url('syncPosition'), 'class' => 'layui-btn layui-btn-xs layui-btn-normal', 'data-ajax' => 1])
            ->addTableColumn(['title' => 'ID', 'field' => 'id', 'minWidth' => 50])
            ->addTableColumn(['title' => '推广位名称', 'field' => 'name', 'minWidth' => 100])
            ->addTableColumn(['title' => '京东联盟ID', 'field' => 'league_id', 'minWidth' => 70])
            ->addTableColumn(['title' => '推广位ID', 'field' => 'position_id', 'minWidth' => 80])
            ->addTableColumn(['title' => '类型', 'field' => 'type', 'type' => 'enum', 'options' => [1 => '手动添加的推广位', 2 => '京东联盟'], 'minWidth' => 80])
            ->addTableColumn(['title' => '站点类型', 'field' => 'jd_type', 'type' => 'enum', 'options' => [0 => '', 1 => '网站推广位', 2 => 'APP推广位', 3 => '导购媒体推广位', 4 => '聊天工具推广位'], 'minWidth' => 80])
            ->addTableColumn(['title' => '是否默认', 'field' => 'default', 'type' => 'enum', 'options' => [1 => '是', 0 => '否'], 'minWidth' => 50])
            ->addTableColumn(['title' => '操作', 'width' => 120, 'type' => 'toolbar'])
            ->addRightButton('edit', ['title' => '编辑', 'href' => url('editPosition', ['id' => '__data_id__']), 'class' => 'layui-btn layui-btn-xs layui-btn-normal', 'minWidth' => 80]);

        return $builder->show();
    }

    public function addPosition()
    {
        $data['created_by'] = $this->adminInfo['id'];
        $unionId = model('league')->where(['status' => 1, 'created_by' => $this->adminInfo['id']])->column('league_id,league_id');
        $builder = new FormBuilder();
        $builder->setMetaTitle('新增推广位')  //设置页面标题
            ->setPostUrl(url('savePosition')) //设置表单提交地址
            ->setTip("站点ID：如果站点类型不是选择聊天工具推广位，则站点ID必填")
            ->addFormItem('created_by', 'hidden', 'created_by')
            ->addFormItem('league_id', 'select', '联盟id', '联盟id', $unionId, 'required')
            ->addFormItem('unionType', 'select', '推广位类型', '推广位类型', [3 => '私域推广位', 4 => '联盟后台推广位'], 'required')
            ->addFormItem('jd_type', 'select', '站点类型', '站点类型', [1 => '网站推广位', 2 => 'APP推广位', 3 => '社交媒体推广位', 4 => '聊天工具推广位'], 'required')
            ->addFormItem('name', 'text', '推广位名称', '推广位名称', [], 'required')
            ->addFormItem('siteId', 'text', '站点ID', '站点ID', [], '')
            ->setFormData($data);
        return $builder->show();
    }

    public function editPosition()
    {
        $id = input('id');
        $data = model('LeaguePosition')->getOne($id);
        if (!$data) {
            $this->error('id参数错误' . $id);
        }
        $builder = new FormBuilder();
        $builder->setMetaTitle('编辑推广位')  //设置页面标题
            ->setPostUrl(url('savePosition')) //设置表单提交地址
            ->addFormItem('id', 'hidden', 'id', 'id')
            ->addFormItem('default', 'radio', '是否默认', '是否默认', [1 => '是', 0 => '否'], 'required')
            ->setFormData($data);
        return $builder->show();
    }

    public function savePosition($jump_to = '', $data = [])
    {
        $post_data = $data ? $data : input('post.');
        if (empty($post_data[$this->pk])) {
            //创建京东推广位
            $league = model('league')->where(['created_by'=>$this->adminInfo['id'], 'league_id' => $post_data['league_id']])->find();
            if (!$league) {
                $this->error('联盟id错误');
            }
            $param = [
                'appid' => config('jtt.appid'),
                'appkey' => config('jtt.appkey'),
                'v' => 'v1',
                'unionid' => $post_data['league_id'],
                'key' => $league['app_key'],
                'unionType' => $post_data['unionType'],
                'type' => $post_data['jd_type'],
                'name' => $post_data['name'],
                
            ];
            if (isset($post_data['siteId']) && $post_data['siteId']!=''){
                $param['siteId'] = $post_data['siteId'];
            }
            $url = 'http://japi.jingtuitui.com/api/new_positionid';
            //dump($param);exit;
            $res = json_decode(http_post($url, $param), true);
            if ($res['return'] == 0) {
                $post_data['position_id'] = $res['result']['positionid'];
                $res = model('LeaguePosition')->addOne($post_data);
            } else {
                $this->error($res['result']);
            }
            
        } else {
            if ($post_data['default']) {
                $where = ['created_by' => $this->adminInfo['id'], 'status' => 1, 'default' => 1];
                model('LeaguePosition')->where($where)->update(['default' => 0]);
            }
            $res = model('LeaguePosition')->updateOne($post_data);
        }
        unset($post_data, $data);
        if ($res) {
            $this->success('数据保存成功', $jump_to);
        } else {
            $this->error('数据保存出错');
        }
    }

    public function syncPosition()
    {
        $site = Db::table('ky_setting')->where(['name' => 'site'])->value('value');
        $site_info = json_decode($site, true);
        if (!isset($site_info['jd_appkey']) || $site_info['jd_appkey'] == '' || !isset($site_info['jd_appsecret']) || $site_info['jd_appsecret'] == '') {
            writeJson(500, 'jd_appkey未配置');
        }
        $jd_appkey = trim($site_info['jd_appkey']);
        $jd_appsecret = trim($site_info['jd_appsecret']);
        $client = Factory::jingdong([
            'app_key' => $jd_appkey,
            'app_secret' => $jd_appsecret,
            'format' => 'json'
        ]);
        $request = new \YearDley\EasyTBK\JingDong\Request\JdUnionPositionQueryRequest();
        //获取用户账号列表
        $account_list = $this->model->where(['created_by' => $this->adminInfo['id'], 'status' => 1])->select();
        $insert_data = [];
        foreach ($account_list as $val) {
            $league_id = $val['league_id'];
            $app_key = $val['app_key'];
            $request->setUnionId($league_id);
            $request->setKey($app_key);
            $request->setUnionType(4);
            $request->setPageIndex(1);
            $request->setPageSize(100);
            $res = $client->execute($request);
            $result = json_decode($res['jd_union_open_position_query_responce']['queryResult'], true);
            if ($result['code'] == 200) {
                $data = $result['data']['result'];
                $total = $result['data']['total'];
                $total_page = ceil($total / 100);
                for ($page = 1; $page <= $total_page; $page++) {
                    $request->setUnionId($league_id);
                    $request->setKey($app_key);
                    $request->setUnionType(4);
                    $request->setPageIndex($page);
                    $request->setPageSize(100);
                    $res2 = $client->execute($request);
                    $result2 = json_decode($res2['jd_union_open_position_query_responce']['queryResult'], true);
                    $data2 = $result2['data']['result'];
                    foreach ($data2 as $val2) {
                        $position_id = $val2['id'];
                        $exist = Db::table('ky_league_position')->where(['position_id' => $position_id])->find();
                        if (empty($exist)) {
                            $insert_data[] = [
                                'name' => $val2['spaceName'],
                                'league_id' => $league_id,
                                'position_id' => $position_id,
                                'type' => 2,
                                'created_by' => $this->adminInfo['id'],
                                'create_time' => time(),
                                'update_time' => time(),
                                'jd_type' => $val2['type'],
                                'siteId' => $val2['siteId'],
                            ];
                        }
                    }
                }
            } else {
                $this->error('联盟id：'.$league_id.':'.$result['message']);
            }
        }
        if ($insert_data) {
            Db::table('ky_league_position')->insertAll($insert_data);
        }

        $this->success('同步完成');
    }
}

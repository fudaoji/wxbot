<?php
/**
 * Created by PhpStorm.
 * Script Name: EventGroupChat.php
 * Create: 3/19/22 11:39 PM
 * Description:
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\bot\handler\vlw;

use app\admin\model\BotMember;
use app\bot\controller\Api;
use ky\Bot\Vlw;
use ky\Helper;
use ky\Jtt;
use ky\Logger;

class EventGroupChat extends Api
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->memberM = new BotMember();
    }

    /**
     * 群聊消息接收器
     */
    public function handle(){
        $this->groupWxid = $this->content['from_group'];
        $this->tpzsHandler();
    }

    /**
     * 推品助手响应
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function tpzsHandler(){
        $content = Helper::$ajax['content'];
        //Logger::error($content);
        $group_wxid = $this->groupWxid;

        //一、群发
        //1、判断当前群组是否是某个用户的中央调度群
        if($group = $this->memberM->getOneJoin([
            'alias' => 'm',
            'join' => [
                ['tpzsGather gather', 'gather.group_id=m.id']
            ],
            'where' => ['gather.status' => 1, 'm.wxid' => $group_wxid, 'gather.officer' => ['like', "%".$this->fromWxid."%"], 'm.uin' => $this->botWxid],
            'field' => ['gather.admin_id', 'm.wxid']
        ])){
            //2.取出机器人负责的群并转发
            $team = model('common/tpzs/Team')->getOneByMap([
                'admin_id' => $group['admin_id'],
                'bot_id' => $this->bot['id']
            ], ['groups']);

            if($team){
                $groups = explode(',', $team['groups']);
                switch($content['type']){
                    case Vlw::MSG_TEXT:
                        if(strpos($content['msg'], 'jd.com') !== false){//jd
                            /**
                             * @var $redis \Redis
                             */
                            $redis = controller('common/base', 'event')->getRedis();
                            $jtt = new Jtt(['appid' => config('system.site.jtt_appid'), 'appkey' => config('system.site.jtt_appkey')]);
                            foreach ($groups as $gid){
                                if($dest_group = $this->memberM->getOneJoin([
                                    'alias' => 'm',
                                    'join' => [
                                        ['tpzsGrouppos gp', 'gp.group_id=m.id'],
                                        ['tpzsPosition tp', 'gp.position_id=tp.id'],
                                        ['tpzsUnion tu', 'tu.id=tp.union_id']
                                    ],
                                    'where' => ['m.wxid' => $gid],
                                    'field' => ['tu.unionid', 'tp.position_id']
                                ])) {
                                    $rKey = $this->content['msg_id'].$dest_group['position_id'];
                                    if(! $reply_content = $redis->get($rKey)){
                                        $count = 0;
                                        do{
                                            $reply_content = $jtt->universal([
                                                'unionid' => $dest_group['unionid'],
                                                'positionid' => $dest_group['position_id'],
                                                'content' => $content['msg']
                                            ]);
                                            $count++;
                                            if($count >= 2) break;
                                        }while($reply_content === false);
                                        if($reply_content){
                                            $reply_content = $reply_content['chain_content'];
                                            $redis->setex($rKey, 300, $reply_content);
                                        }
                                    }

                                    $reply_content && $this->botClient->sendTextToFriend([
                                        'robot_wxid' => $content['robot_wxid'],
                                        'to_wxid' => $gid,
                                        'msg' => $reply_content
                                    ]);
                                }
                            }
                        }elseif (strpos($content['msg'], 'ckjr001.com') !== false){ //https://wx74161fcecb84d46c.wx.ckjr001.com/kpv2p/6m5oe8/?1649328453716=#/homePage/course/voice?courseId=2913528&ckFrom=5&extId=-1&refereeId=[推广人]
                            /**
                             * @var $redis \Redis
                             */
                            $redis = controller('common/base', 'event')->getRedis();
                            foreach ($groups as $gid){
                                if($dest_group = $this->memberM->getOneJoin([
                                    'alias' => 'm',
                                    'join' => [
                                        ['tpzsGrouppos gp', 'gp.group_id=m.id'],
                                        ['tpzsChannel channel', 'channel.id=gp.channel_id']
                                    ],
                                    'where' => ['m.wxid' => $gid, 'm.uin' => $this->bot['uin']],
                                    'field' => ['channel.ckid']
                                ])) {
                                    $rKey = $this->content['msg_id'].$dest_group['ckid'];
                                    if(! $reply_content = $redis->get($rKey)){
                                        $reply_content = str_replace('[推广人]', $dest_group['ckid'], $this->content['msg']);
                                        $redis->setex($rKey, 300, $reply_content);
                                    }
                                    $this->botClient->sendTextToFriend([
                                        'robot_wxid' => $content['robot_wxid'],
                                        'to_wxid' => $gid,
                                        'msg' => $reply_content
                                    ]);
                                }
                            }
                        }else{ //basic
                            $this->botClient->sendTextToFriends(['robot_wxid' => $content['robot_wxid'], 'to_wxid' => $groups, 'msg' => $content['msg']]);
                        }
                        break;
                    case Vlw::MSG_LINK:
                        $msg = json_decode($this->content['msg'], true)['Link'][0];
                        $res = $this->botClient->sendShareLinkToFriends([
                            'robot_wxid' => $content['robot_wxid'],
                            'to_wxid' => $groups,
                            'url' => $msg['url'],
                            'image_url' => empty($msg['image_url']) ? 'https://zyx.images.huihuiba.net/default-headimg.png' : $msg['image_url'],
                            'title' => $msg['title'],
                            'desc' => $msg['desc']
                        ]);
                        //Logger::error($res);
                        break;
                    default:
                        $this->botClient->sendTextToFriends(['robot_wxid' => $content['robot_wxid'], 'to_wxid' => $groups, 'msg' => $content['msg']]);
                        break;
                }
                //Logger::error($this->content);
            }
        }
        //二、关键词
        $this->keyword();
    }

    /**
     * 关键词回复
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function keyword(){
        if(strpos($this->content['msg'], "@所有人") === false && strpos($this->content['msg'], "我要") !== false){ //主动搜商品
            //Logger::error($this->content);
            if(model('common/tpzs/Team')->total([
                'bot_id' => $this->bot['id'],
                'groups' => ['like', "%".$this->groupWxid."%"]
            ]) && $dest_group = $this->memberM->getOneJoin([
                'alias' => 'm',
                'join' => [
                    ['tpzsGrouppos gp', 'gp.group_id=m.id'],
                    ['tpzsPosition tp', 'gp.position_id=tp.id'],
                    ['tpzsUnion tu', 'tu.id=tp.union_id']
                ],
                'where' => ['m.wxid' => $this->groupWxid],
                'field' => ['tu.unionid', 'tp.position_id']
            ])){
                $msg = explode("我要", $this->content['msg']);
                if(!empty($msg[1])){
                    $keyword = trim($msg[1]);
                    $this->botClient->sendTextToFriend([
                        'robot_wxid' => $this->content['robot_wxid'],
                        'to_wxid' => $this->groupWxid,
                        'msg' => "@".$this->content['from_name'] . "[emoji=\\u2005] ".$this->searchGoods([
                                'keyword' => $keyword,
                                'unionid' => $dest_group['unionid'],
                                'positionid' => $dest_group['position_id'],
                            ])
                    ]);
                }
            }
        }
    }

    /**
     * 用户主动搜索
     * @param array $params
     * @return string
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function searchGoods($params = []){
        $keyword = $params['keyword'];
        $page_size = empty($params['page_size']) ? 3 : $params['page_size'];
        $unionid = $params['unionid'];
        $positionid = $params['positionid'];
        $jtt = new Jtt(['appid' => config('system.site.jtt_appid'), 'appkey' => config('system.site.jtt_appkey')]);
        $res = $jtt->jdGoodsQuery([
            'v' => 'v3', 'keyword' => $keyword, 'sortName' => 'inOrderCount30Days', 'sort' => 'desc', 'isCoupon' => 1,
            'pageSize' => $page_size
        ]);

        $template = "[商品标题]
京东价：[商品原价]元
抢购价：[优惠价]元
领券+下单：[抢购链接]";
        $content = "暂未找到相关内容，您可以点击以下链接自助查询哦：
https://union-click.jd.com/jdc?e=618%7Cpc%7C&p=JF8BAOkJK1olXDYDZBoCUBVIMzZNXhpXVhgcDVpCVFRMVnBaRQcLDlZRAAMoUAMJaDtMWUVzBnF0ACcPYABWAxJTTjt9HnUGFigtWC9rXz8WQwRACU8dDRsBVUVWUzlcYw4ZBFhHZBkLYAtWBjp-eCBjIhwECQ5DEgBzZR8EF2sQXQcDU1ddC04eM2wJGF8UXAQKU1ttOEsUMyRmGmsXXAcHV1lYDEgTM28PHlIcVAABUF5UDk4nBG8BKwBAMwNEHz0jCCNzRBNAeF5QHzYyZF1tD0seF2l6WgkBW3QyZF9tC3tIRzJVK1kUXAILZA
";
        if(!empty($res['totalCount'])){
            $content = "为您查询到以下".count($res['goods'])."个商品：\r\n\r\n";
            foreach ($res['goods'] as $k => $goods){
                $link = $goods['goods_link'];
                if(!empty($goods['couponInfo']['couponList'][0]['discount_link'])){
                    $coupon_link = $goods['couponInfo']['couponList'][0]['discount_link'];
                    $link = $goods['goods_link'] . "\r\n" . $coupon_link;
                }

                if($k + 1 >= count($res['goods'])){
                    $link .= "\r\n-------------------------------------------\r\n\r\n[玫瑰]如果您对查询结果不满意，可以自主查询：\r\nhttps://union-click.jd.com/jdc?e=618%7Cpc%7C&p=JF8BAOkJK1olXDYDZBoCUBVIMzZNXhpXVhgcDVpCVFRMVnBaRQcLDlZRAAMoUAMJaDtMWUVzBnF0ACcPYABWAxJTTjt9HnUGFigtWC9rXz8WQwRACU8dDRsBVUVWUzlcYw4ZBFhHZBkLYAtWBjp-eCBjIhwECQ5DEgBzZR8EF2sQXQcDU1ddC04eM2wJGF8UXAQKU1ttOEsUMyRmGmsXXAcHV1lYDEgTM28PHlIcVAABUF5UDk4nBG8BKwBAMwNEHz0jCCNzRBNAeF5QHzYyZF1tD0seF2l6WgkBW3QyZF9tC3tIRzJVK1kUXAILZA";
                }else{
                    $link .= "\r\n-------------------------------------------\r\n";
                }

                $count = 0;
                do{
                    $reply_content = $jtt->universal([
                        'unionid' => $unionid,
                        'positionid' => $positionid,
                        'content' => $link
                    ]);
                    $count++;
                    if($count >= 2) break;
                }while($reply_content === false);

                if($reply_content && !empty($reply_content['chain_content'])){
                    $link = $reply_content['chain_content'];
                }else{
                    $link = "https://".$goods['goods_link'] . "\r\n-------------------------------------------\r\n";
                }

                $temp_content = str_replace(
                    ['[商品标题]', '[商品原价]', '[优惠价]', '[抢购链接]'],
                    [$goods['skuName'], $goods['priceInfo']['goods_price'], $goods['priceInfo']['lowestCouponPrice'], $link],
                    $template
                );

                $content .= $temp_content;
            }
        }else{
            $reply_content = $jtt->universal([
                'unionid' => $unionid,
                'positionid' => $positionid,
                'content' => $content,
                'v' => 'v2'
            ]);
            $content = $reply_content['chain_content'];
        }
        return $content;
    }

    /**
     * 移出群
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function rmGroupMember(){
        if($this->groupWxid == 'R:10951134140940878'){
            if(($pos1 = strpos($this->content['msg'], "@") !== false)
                && ($pos2 = strpos($this->content['msg'], "[")) !== false
                && strpos($this->content['msg'], "[弱]") !== false
            ){
                $nickname = trim(substr($this->content['msg'], $pos1, $pos2-1));
                if(!empty($nickname) && $gm = $this->getGroupMemberByNickname($nickname)){
                    Logger::error($gm);
                    /*
                     * todo
                     * 1.根据昵称找到wxid
                     * 2.过滤白名单
                     * 3.判断是否达到群规设置的次数
                     * */
                    if(3){
                        $this->botClient->sendTextToFriends(
                            [
                                'robot_wxid' => $this->botWxid,
                                'to_wxid' => $this->groupWxid,
                                'msg' => "@".$nickname."你已经被[弱]3次，现将你移出群。"
                            ]
                        );
                        //踢出
                        if(! $res = $this->botClient->removeGroupMember(
                            [
                                'robot_wxid' => $this->botWxid,
                                'to_wxid' => $gm['wxid'],
                                'group_wxid' => $this->groupWxid
                            ]
                        )){
                            Logger::error($this->botClient->getError());
                        }
                    }else{
                        $this->botClient->sendTextToFriends(
                            [
                                'robot_wxid' => $this->botWxid,
                                'to_wxid' => $this->groupWxid,
                                'msg' => "@".$nickname."你已经被[弱]2次，当达到3次的时候会被移出群。若被误伤，请私聊管理员！！！"
                            ]
                        );
                    }
                }
            }
            //Logger::error(json_encode($this->content, JSON_UNESCAPED_UNICODE));
        }
    }

}
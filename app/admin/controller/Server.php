<?php
/**
 * Created by PhpStorm.
 * Script Name: Server.php
 * Create: 2023/2/18 9:56
 * Description:
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\admin\controller;
use app\common\model\Server as ServerM;
use app\constants\Common;

class Server extends Base
{

    /**
     * @var ServerM
     */
    protected $model;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->model = new ServerM();
    }

    public function index(){
        if(request()->isPost()){
            $post_data = input('post.');
            $where = [];
            !empty($post_data['search_key']) && $where['url'] = ['like', '%'.$post_data['search_key'].'%'];

            $total = $this->model->total($where, true);
            if ($total) {
                $list = $this->model->getList([$post_data['page'], $post_data['limit']], $where, ['id' => 'desc'], true, 1);
            } else {
                $list = [];
            }

            $this->success('success', '', ['total' => $total, 'list' => $list]);
        }

        $builder = new ListBuilder();
        $builder->setSearch([
            ['type' => 'text', 'name' => 'search_key', 'title' => '搜索词','placeholder' => 'IP']
        ])
            ->addTopButton('addnew')
            ->addTableColumn(['title' => '序号', 'type' => 'index'])
            ->addTableColumn(['title' => '接口地址', 'field' => 'url', 'minWidth' => 200])
            ->addTableColumn(['title' => 'Appkey', 'field' => 'app_key', 'minWidth' => 100])
            ->addTableColumn(['title' => '承载数量', 'field' => 'num', 'minWidth' => 80])
            ->addTableColumn(['title' => '创建时间', 'field' => 'create_time', 'type' => 'datetime', 'minWidth' => 180])
            ->addTableColumn(['title' => '状态', 'field' => 'status', 'type' => 'switch', 'options' => Common::status()])
            ->addTableColumn(['title' => '操作', 'width' => 220, 'type' => 'toolbar'])
            ->addRightButton('edit')
            ->addRightButton('delete');
        if(! ServerM::getServer()){
            $builder->setTip("<p style='color: red;'>告警：当前无可用服务器，请及时增加服务器！</p>");
        }
        return $builder->show();
    }

    /**
     * 添加
     */
    public function add(){
        //使用FormBuilder快速建立表单页面。
        $builder = new FormBuilder();
        $builder->setMetaTitle('新增')  //设置页面标题
            ->setPostUrl(url('savepost')) //设置表单提交地址
            ->addFormItem('url', 'text', '接口地址', 'ip:port', [], 'required  maxlength="20"')
            ->addFormItem('app_key', 'text', 'Appkey', 'Appkey', [], 'required')
            ->addFormItem('num', 'number', '承载数量', '承载数量', [], 'required min=1')
            ->setFormData(['num' => 5, 'app_key' => get_rand_char(32)]);

        return $builder->show();
    }

    /**
     * 编辑
     */
    public function edit(){
        $id = input('id');
        $data = $this->model->getOne($id);
        if(! $data){
            $this->error('id参数错误');
        }
        //使用FormBuilder快速建立表单页面。
        $builder = new FormBuilder();
        $builder->setMetaTitle('编辑')  //设置页面标题
            ->setPostUrl(url('savepost')) //设置表单提交地址
            ->addFormItem('id', 'hidden', 'id', 'id')
            ->addFormItem('url', 'text', '接口地址', 'ip:port', [], 'required  maxlength="20"')
            ->addFormItem('app_key', 'text', 'Appkey', 'Appkey', [], 'required')
            ->addFormItem('num', 'number', '承载数量', '承载数量', [], 'required min=1')
            ->setFormData($data);

        return $builder->show();
    }
}
<?php
/**
 * Created by PhpStorm.
 * Script Name: Tpzs.php
 * Create: 2022/4/18 10:38
 * Description: 推品助手处理器
 * Author: fudaoji<fdj@kuryun.cn>
 */

namespace app\bot\controller;

use app\common\model\ai\Config;
use ky\Logger;
use ky\OpenAI\Base;

class Ai extends Addon
{
    private $configs;
    private $toWxid = '';
    /**
     * @var Config
     */
    private $configM;
    /**
     * @var \ky\OpenAI\Driver\Weixin
     */
    private $aiClient;

    public function init($options = [])
    {
        parent::init($options); // TODO: Change the autogenerated stub
        $this->configM = new Config();
        $this->configs = $this->configM->getConf(['bot_id' => $this->bot['id']]);
        return $this;
    }

    /**
     * 机器人主动事件
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function deviceCallbackHandle(){
        $this->groupChatHandle();
    }

    /**
     * 群聊处理器
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     */
    public function groupChatHandle(){
        if(empty($this->configs['switch']) || strpos($this->configs['wxids'], $this->groupWxid) === false){
            return false;
        }
        $this->toWxid = $this->groupWxid;
        //一、关键词
        $this->keyword();
    }

    /**
     * 私聊处理器
     * Author: fudaoji<fdj@kuryun.cn>
     */
    public function privateChatHandle(){
        if(empty($this->configs['switch']) || strpos($this->configs['wxids'], $this->fromWxid) === false){
            return false;
        }
        $this->toWxid = $this->fromWxid;
        //一、关键词
        $this->keyword();
    }

    /**
     * 关键词回复
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * Author: fudaoji<fdj@kuryun.cn>
     */
    private function keyword(){
        $this->aiClient = $this->configM->getAiClient($this->bot);
        $msg = trim($this->content['msg']);
        $res = $this->aiClient->smart([
            'userid' => $this->fromWxid,
            'msg' => $msg,
        ]);
        //Logger::error($res);
        if($res['code'] && !empty($res['answer_type'])){
            switch ($res['answer_type']){
                case Base::ANSWER_TEXT:
                    $this->botClient->sendTextToFriend([
                        'robot_wxid' => $this->botWxid,
                        'to_wxid' => $this->toWxid,
                        'msg' => $res['answer']
                    ]);
                    break;
                case Base::ANSWER_MUSIC:
                    if(!empty($res['more_info']['music_ans_detail'])){
                        $res['more_info']['music_ans_detail'] = json_decode($res['more_info']['music_ans_detail'], true);
                        if(!empty($res['more_info']['music_ans_detail']['play_command']['play_list'])){
                            $info = $res['more_info']['music_ans_detail']['play_command']['play_list'][0];
                            $this->botClient->sendMusicLinkMsg([
                                'robot_wxid' => $this->botWxid,
                                'to_wxid' => $this->toWxid,
                                'title' =>  $info['name'],  // 标题
                                'desc' => $info['author'],  // 内容
                                'url' => "https://y.qq.com/n/ryqq/songDetail/{$info['mid']}",  // 链接地址
                                'dataurl' => $info['url'], // mp3地址
                                'thumburl' => $info['album_pic_url'],  // http图片地址
                            ]);
                        }
                    }
                    break;
                default:
                    if(!empty($res['answer']) && is_string($res['answer'])){
                        $this->botClient->sendTextToFriend([
                            'robot_wxid' => $this->botWxid,
                            'to_wxid' => $this->toWxid,
                            'msg' => $res['answer']
                        ]);
                    }
                    break;
            }
        }
    }
}